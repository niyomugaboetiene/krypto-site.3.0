/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { KryptoDAO, KryptoDAOInterface } from "../../dao.sol/KryptoDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "CreateProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "GetProposal",
    outputs: [
      {
        internalType: "string[]",
        name: "name",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "description",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "voteCount",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "executed",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "VoteProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506113048061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063013cf08b146100515780630df07b811461008457806381cc0a38146100a057806389b14491146100bc575b600080fd5b61006b6004803603810190610066919061084a565b6100dd565b60405161007b9493929190610931565b60405180910390f35b61009e60048036038101906100999190610ab9565b61023a565b005b6100ba60048036038101906100b5919061084a565b6102e6565b005b6100c46104c4565b6040516100d49493929190610db9565b60405180910390f35b600081815481106100ed57600080fd5b906000526020600020906004020160009150905080600001805461011090610e49565b80601f016020809104026020016040519081016040528092919081815260200182805461013c90610e49565b80156101895780601f1061015e57610100808354040283529160200191610189565b820191906000526020600020905b81548152906001019060200180831161016c57829003601f168201915b50505050509080600101805461019e90610e49565b80601f01602080910402602001604051908101604052809291908181526020018280546101ca90610e49565b80156102175780601f106101ec57610100808354040283529160200191610217565b820191906000526020600020905b8154815290600101906020018083116101fa57829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b6000604051806080016040528083815260200184815260200160008152602001600015158152509080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001908161029f9190611026565b5060208201518160010190816102b59190611026565b506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555050505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036a90611144565b60405180910390fd5b6000818154811061038757610386611164565b5b906000526020600020906004020160030160009054906101000a900460ff16156103e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dd906111df565b60405180910390fd5b806000805490501161042d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104249061124b565b60405180910390fd5b60016000828154811061044357610442611164565b5b90600052602060002090600402016002016000828254610463919061129a565b9250508190555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6060806060806000808054905090508067ffffffffffffffff8111156104ed576104ec61098e565b5b60405190808252806020026020018201604052801561052057816020015b606081526020019060019003908161050b5790505b5094508067ffffffffffffffff81111561053d5761053c61098e565b5b60405190808252806020026020018201604052801561057057816020015b606081526020019060019003908161055b5790505b5093508067ffffffffffffffff81111561058d5761058c61098e565b5b6040519080825280602002602001820160405280156105bb5781602001602082028036833780820191505090505b5092508067ffffffffffffffff8111156105d8576105d761098e565b5b6040519080825280602002602001820160405280156106065781602001602082028036833780820191505090505b50915060005b818110156107f857600080828154811061062957610628611164565b5b9060005260206000209060040201905080600101805461064890610e49565b80601f016020809104026020016040519081016040528092919081815260200182805461067490610e49565b80156106c15780601f10610696576101008083540402835291602001916106c1565b820191906000526020600020905b8154815290600101906020018083116106a457829003601f168201915b50505050508783815181106106d9576106d8611164565b5b60200260200101819052508060000180546106f390610e49565b80601f016020809104026020016040519081016040528092919081815260200182805461071f90610e49565b801561076c5780601f106107415761010080835404028352916020019161076c565b820191906000526020600020905b81548152906001019060200180831161074f57829003601f168201915b505050505086838151811061078457610783611164565b5b602002602001018190525080600201548583815181106107a7576107a6611164565b5b6020026020010181815250508060030160009054906101000a900460ff168483815181106107d8576107d7611164565b5b60200260200101901515908115158152505050808060010191505061060c565b505090919293565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61082781610814565b811461083257600080fd5b50565b6000813590506108448161081e565b92915050565b6000602082840312156108605761085f61080a565b5b600061086e84828501610835565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108b1578082015181840152602081019050610896565b60008484015250505050565b6000601f19601f8301169050919050565b60006108d982610877565b6108e38185610882565b93506108f3818560208601610893565b6108fc816108bd565b840191505092915050565b61091081610814565b82525050565b60008115159050919050565b61092b81610916565b82525050565b6000608082019050818103600083015261094b81876108ce565b9050818103602083015261095f81866108ce565b905061096e6040830185610907565b61097b6060830184610922565b95945050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109c6826108bd565b810181811067ffffffffffffffff821117156109e5576109e461098e565b5b80604052505050565b60006109f8610800565b9050610a0482826109bd565b919050565b600067ffffffffffffffff821115610a2457610a2361098e565b5b610a2d826108bd565b9050602081019050919050565b82818337600083830152505050565b6000610a5c610a5784610a09565b6109ee565b905082815260208101848484011115610a7857610a77610989565b5b610a83848285610a3a565b509392505050565b600082601f830112610aa057610a9f610984565b5b8135610ab0848260208601610a49565b91505092915050565b60008060408385031215610ad057610acf61080a565b5b600083013567ffffffffffffffff811115610aee57610aed61080f565b5b610afa85828601610a8b565b925050602083013567ffffffffffffffff811115610b1b57610b1a61080f565b5b610b2785828601610a8b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610b7982610877565b610b838185610b5d565b9350610b93818560208601610893565b610b9c816108bd565b840191505092915050565b6000610bb38383610b6e565b905092915050565b6000602082019050919050565b6000610bd382610b31565b610bdd8185610b3c565b935083602082028501610bef85610b4d565b8060005b85811015610c2b5784840389528151610c0c8582610ba7565b9450610c1783610bbb565b925060208a01995050600181019050610bf3565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610c7281610814565b82525050565b6000610c848383610c69565b60208301905092915050565b6000602082019050919050565b6000610ca882610c3d565b610cb28185610c48565b9350610cbd83610c59565b8060005b83811015610cee578151610cd58882610c78565b9750610ce083610c90565b925050600181019050610cc1565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610d3081610916565b82525050565b6000610d428383610d27565b60208301905092915050565b6000602082019050919050565b6000610d6682610cfb565b610d708185610d06565b9350610d7b83610d17565b8060005b83811015610dac578151610d938882610d36565b9750610d9e83610d4e565b925050600181019050610d7f565b5085935050505092915050565b60006080820190508181036000830152610dd38187610bc8565b90508181036020830152610de78186610bc8565b90508181036040830152610dfb8185610c9d565b90508181036060830152610e0f8184610d5b565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e6157607f821691505b602082108103610e7457610e73610e1a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610edc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610e9f565b610ee68683610e9f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610f23610f1e610f1984610814565b610efe565b610814565b9050919050565b6000819050919050565b610f3d83610f08565b610f51610f4982610f2a565b848454610eac565b825550505050565b600090565b610f66610f59565b610f71818484610f34565b505050565b5b81811015610f9557610f8a600082610f5e565b600181019050610f77565b5050565b601f821115610fda57610fab81610e7a565b610fb484610e8f565b81016020851015610fc3578190505b610fd7610fcf85610e8f565b830182610f76565b50505b505050565b600082821c905092915050565b6000610ffd60001984600802610fdf565b1980831691505092915050565b60006110168383610fec565b9150826002028217905092915050565b61102f82610877565b67ffffffffffffffff8111156110485761104761098e565b5b6110528254610e49565b61105d828285610f99565b600060209050601f831160018114611090576000841561107e578287015190505b611088858261100a565b8655506110f0565b601f19841661109e86610e7a565b60005b828110156110c6578489015182556001820191506020850194506020810190506110a1565b868310156110e357848901516110df601f891682610fec565b8355505b6001600288020188555050505b505050505050565b7f596f7527726520616c726561647920766f746564000000000000000000000000600082015250565b600061112e601483610882565b9150611139826110f8565b602082019050919050565b6000602082019050818103600083015261115d81611121565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f416c726561647920657865637574656400000000000000000000000000000000600082015250565b60006111c9601083610882565b91506111d482611193565b602082019050919050565b600060208201905081810360008301526111f8816111bc565b9050919050565b7f496e76616c69642070726f706f73616c00000000000000000000000000000000600082015250565b6000611235601083610882565b9150611240826111ff565b602082019050919050565b6000602082019050818103600083015261126481611228565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112a582610814565b91506112b083610814565b92508282019050808211156112c8576112c761126b565b5b9291505056fea2646970667358221220849366f43eac609834d74ba60770331d82cf19c7fb7915b81052c46d3dd1630e64736f6c634300081c0033";

type KryptoDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KryptoDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KryptoDAO__factory extends ContractFactory {
  constructor(...args: KryptoDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      KryptoDAO & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): KryptoDAO__factory {
    return super.connect(runner) as KryptoDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KryptoDAOInterface {
    return new Interface(_abi) as KryptoDAOInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): KryptoDAO {
    return new Contract(address, _abi, runner) as unknown as KryptoDAO;
  }
}
