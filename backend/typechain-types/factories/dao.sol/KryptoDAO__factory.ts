/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { KryptoDAO, KryptoDAOInterface } from "../../dao.sol/KryptoDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "CreateProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "GetProposal",
    outputs: [
      {
        internalType: "string[]",
        name: "name",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "description",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "voteCount",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "executed",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "VoteProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061121b8061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063013cf08b146100515780630df07b811461008457806381cc0a38146100a057806389b14491146100bc575b600080fd5b61006b600480360381019061006691906107cd565b6100dd565b60405161007b94939291906108b4565b60405180910390f35b61009e60048036038101906100999190610a3c565b61023a565b005b6100ba60048036038101906100b591906107cd565b6102e6565b005b6100c4610447565b6040516100d49493929190610d3c565b60405180910390f35b600081815481106100ed57600080fd5b906000526020600020906004020160009150905080600001805461011090610dcc565b80601f016020809104026020016040519081016040528092919081815260200182805461013c90610dcc565b80156101895780601f1061015e57610100808354040283529160200191610189565b820191906000526020600020905b81548152906001019060200180831161016c57829003601f168201915b50505050509080600101805461019e90610dcc565b80601f01602080910402602001604051908101604052809291908181526020018280546101ca90610dcc565b80156102175780601f106101ec57610100808354040283529160200191610217565b820191906000526020600020905b8154815290600101906020018083116101fa57829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b6000604051806080016040528083815260200184815260200160008152602001600015158152509080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001908161029f9190610fa9565b5060208201518160010190816102b59190610fa9565b506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555050505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036a906110c7565b60405180910390fd5b80600080549050116103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b190611133565b60405180910390fd5b6001600082815481106103d0576103cf611153565b5b9060005260206000209060040201600201546103ec91906111b1565b5060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6060806060806000808054905090508067ffffffffffffffff8111156104705761046f610911565b5b6040519080825280602002602001820160405280156104a357816020015b606081526020019060019003908161048e5790505b5094508067ffffffffffffffff8111156104c0576104bf610911565b5b6040519080825280602002602001820160405280156104f357816020015b60608152602001906001900390816104de5790505b5093508067ffffffffffffffff8111156105105761050f610911565b5b60405190808252806020026020018201604052801561053e5781602001602082028036833780820191505090505b5092508067ffffffffffffffff81111561055b5761055a610911565b5b6040519080825280602002602001820160405280156105895781602001602082028036833780820191505090505b50915060005b8181101561077b5760008082815481106105ac576105ab611153565b5b906000526020600020906004020190508060010180546105cb90610dcc565b80601f01602080910402602001604051908101604052809291908181526020018280546105f790610dcc565b80156106445780601f1061061957610100808354040283529160200191610644565b820191906000526020600020905b81548152906001019060200180831161062757829003601f168201915b505050505087838151811061065c5761065b611153565b5b602002602001018190525080600001805461067690610dcc565b80601f01602080910402602001604051908101604052809291908181526020018280546106a290610dcc565b80156106ef5780601f106106c4576101008083540402835291602001916106ef565b820191906000526020600020905b8154815290600101906020018083116106d257829003601f168201915b505050505086838151811061070757610706611153565b5b6020026020010181905250806002015485838151811061072a57610729611153565b5b6020026020010181815250508060030160009054906101000a900460ff1684838151811061075b5761075a611153565b5b60200260200101901515908115158152505050808060010191505061058f565b505090919293565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6107aa81610797565b81146107b557600080fd5b50565b6000813590506107c7816107a1565b92915050565b6000602082840312156107e3576107e261078d565b5b60006107f1848285016107b8565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610834578082015181840152602081019050610819565b60008484015250505050565b6000601f19601f8301169050919050565b600061085c826107fa565b6108668185610805565b9350610876818560208601610816565b61087f81610840565b840191505092915050565b61089381610797565b82525050565b60008115159050919050565b6108ae81610899565b82525050565b600060808201905081810360008301526108ce8187610851565b905081810360208301526108e28186610851565b90506108f1604083018561088a565b6108fe60608301846108a5565b95945050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61094982610840565b810181811067ffffffffffffffff8211171561096857610967610911565b5b80604052505050565b600061097b610783565b90506109878282610940565b919050565b600067ffffffffffffffff8211156109a7576109a6610911565b5b6109b082610840565b9050602081019050919050565b82818337600083830152505050565b60006109df6109da8461098c565b610971565b9050828152602081018484840111156109fb576109fa61090c565b5b610a068482856109bd565b509392505050565b600082601f830112610a2357610a22610907565b5b8135610a338482602086016109cc565b91505092915050565b60008060408385031215610a5357610a5261078d565b5b600083013567ffffffffffffffff811115610a7157610a70610792565b5b610a7d85828601610a0e565b925050602083013567ffffffffffffffff811115610a9e57610a9d610792565b5b610aaa85828601610a0e565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610afc826107fa565b610b068185610ae0565b9350610b16818560208601610816565b610b1f81610840565b840191505092915050565b6000610b368383610af1565b905092915050565b6000602082019050919050565b6000610b5682610ab4565b610b608185610abf565b935083602082028501610b7285610ad0565b8060005b85811015610bae5784840389528151610b8f8582610b2a565b9450610b9a83610b3e565b925060208a01995050600181019050610b76565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610bf581610797565b82525050565b6000610c078383610bec565b60208301905092915050565b6000602082019050919050565b6000610c2b82610bc0565b610c358185610bcb565b9350610c4083610bdc565b8060005b83811015610c71578151610c588882610bfb565b9750610c6383610c13565b925050600181019050610c44565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610cb381610899565b82525050565b6000610cc58383610caa565b60208301905092915050565b6000602082019050919050565b6000610ce982610c7e565b610cf38185610c89565b9350610cfe83610c9a565b8060005b83811015610d2f578151610d168882610cb9565b9750610d2183610cd1565b925050600181019050610d02565b5085935050505092915050565b60006080820190508181036000830152610d568187610b4b565b90508181036020830152610d6a8186610b4b565b90508181036040830152610d7e8185610c20565b90508181036060830152610d928184610cde565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610de457607f821691505b602082108103610df757610df6610d9d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610e5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610e22565b610e698683610e22565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610ea6610ea1610e9c84610797565b610e81565b610797565b9050919050565b6000819050919050565b610ec083610e8b565b610ed4610ecc82610ead565b848454610e2f565b825550505050565b600090565b610ee9610edc565b610ef4818484610eb7565b505050565b5b81811015610f1857610f0d600082610ee1565b600181019050610efa565b5050565b601f821115610f5d57610f2e81610dfd565b610f3784610e12565b81016020851015610f46578190505b610f5a610f5285610e12565b830182610ef9565b50505b505050565b600082821c905092915050565b6000610f8060001984600802610f62565b1980831691505092915050565b6000610f998383610f6f565b9150826002028217905092915050565b610fb2826107fa565b67ffffffffffffffff811115610fcb57610fca610911565b5b610fd58254610dcc565b610fe0828285610f1c565b600060209050601f8311600181146110135760008415611001578287015190505b61100b8582610f8d565b865550611073565b601f19841661102186610dfd565b60005b8281101561104957848901518255600182019150602085019450602081019050611024565b868310156110665784890151611062601f891682610f6f565b8355505b6001600288020188555050505b505050505050565b7f596f7527726520616c726561647920766f746564000000000000000000000000600082015250565b60006110b1601483610805565b91506110bc8261107b565b602082019050919050565b600060208201905081810360008301526110e0816110a4565b9050919050565b7f496e76616c69642070726f706f73616c00000000000000000000000000000000600082015250565b600061111d601083610805565b9150611128826110e7565b602082019050919050565b6000602082019050818103600083015261114c81611110565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111bc82610797565b91506111c783610797565b92508282019050808211156111df576111de611182565b5b9291505056fea2646970667358221220246ce726efaff65cb3c5b857a33dc97c52d9b9c8e847b927a8c842b011003b7464736f6c634300081c0033";

type KryptoDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KryptoDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KryptoDAO__factory extends ContractFactory {
  constructor(...args: KryptoDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      KryptoDAO & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): KryptoDAO__factory {
    return super.connect(runner) as KryptoDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KryptoDAOInterface {
    return new Interface(_abi) as KryptoDAOInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): KryptoDAO {
    return new Contract(address, _abi, runner) as unknown as KryptoDAO;
  }
}
