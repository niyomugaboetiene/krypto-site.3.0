/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { KryptoDAO, KryptoDAOInterface } from "../../dao.sol/KryptoDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "CreateProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "GetProposal",
    outputs: [
      {
        internalType: "string[]",
        name: "names",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "descriptions",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "voteCounts",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "executedFlags",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "VoteProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061159a8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063013cf08b146100675780630df07b811461009a57806343859632146100b657806381cc0a38146100e657806389b1449114610102578063ddb556f114610123575b600080fd5b610081600480360381019061007c9190610a27565b61013f565b6040516100919493929190610b0e565b60405180910390f35b6100b460048036038101906100af9190610c96565b61029c565b005b6100d060048036038101906100cb9190610d6c565b610348565b6040516100dd9190610dac565b60405180910390f35b61010060048036038101906100fb9190610a27565b610377565b005b61010a610577565b60405161011a949392919061104f565b60405180910390f35b61013d60048036038101906101389190610a27565b6108b3565b005b6000818154811061014f57600080fd5b9060005260206000209060040201600091509050806000018054610172906110df565b80601f016020809104026020016040519081016040528092919081815260200182805461019e906110df565b80156101eb5780601f106101c0576101008083540402835291602001916101eb565b820191906000526020600020905b8154815290600101906020018083116101ce57829003601f168201915b505050505090806001018054610200906110df565b80601f016020809104026020016040519081016040528092919081815260200182805461022c906110df565b80156102795780601f1061024e57610100808354040283529160200191610279565b820191906000526020600020905b81548152906001019060200180831161025c57829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b6000604051806080016040528084815260200183815260200160008152602001600015158152509080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001908161030191906112bc565b50602082015181600101908161031791906112bc565b506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555050505050565b60016020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6001600082815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040c906113da565b60405180910390fd5b60008181548110610429576104286113fa565b5b906000526020600020906004020160030160009054906101000a900460ff1615610488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047f90611475565b60405180910390fd5b60008054905081106104cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c6906114e1565b60405180910390fd5b6001600082815481106104e5576104e46113fa565b5b906000526020600020906004020160020160008282546105059190611530565b92505081905550600180600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6060806060806000808054905090508067ffffffffffffffff8111156105a05761059f610b6b565b5b6040519080825280602002602001820160405280156105d357816020015b60608152602001906001900390816105be5790505b5094508067ffffffffffffffff8111156105f0576105ef610b6b565b5b60405190808252806020026020018201604052801561062357816020015b606081526020019060019003908161060e5790505b5093508067ffffffffffffffff8111156106405761063f610b6b565b5b60405190808252806020026020018201604052801561066e5781602001602082028036833780820191505090505b5092508067ffffffffffffffff81111561068b5761068a610b6b565b5b6040519080825280602002602001820160405280156106b95781602001602082028036833780820191505090505b50915060005b818110156108ab5760008082815481106106dc576106db6113fa565b5b906000526020600020906004020190508060000180546106fb906110df565b80601f0160208091040260200160405190810160405280929190818152602001828054610727906110df565b80156107745780601f1061074957610100808354040283529160200191610774565b820191906000526020600020905b81548152906001019060200180831161075757829003601f168201915b505050505087838151811061078c5761078b6113fa565b5b60200260200101819052508060010180546107a6906110df565b80601f01602080910402602001604051908101604052809291908181526020018280546107d2906110df565b801561081f5780601f106107f45761010080835404028352916020019161081f565b820191906000526020600020905b81548152906001019060200180831161080257829003601f168201915b5050505050868381518110610837576108366113fa565b5b6020026020010181905250806002015485838151811061085a576108596113fa565b5b6020026020010181815250508060030160009054906101000a900460ff1684838151811061088b5761088a6113fa565b5b6020026020010190151590811515815250505080806001019150506106bf565b505090919293565b60008054905081106108fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f1906114e1565b60405180910390fd5b6000818154811061090e5761090d6113fa565b5b906000526020600020906004020160030160009054906101000a900460ff161561096d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096490611475565b60405180910390fd5b600160008281548110610983576109826113fa565b5b90600052602060002090600402016002015411156109da576001600082815481106109b1576109b06113fa565b5b906000526020600020906004020160030160006101000a81548160ff0219169083151502179055505b50565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610a04816109f1565b8114610a0f57600080fd5b50565b600081359050610a21816109fb565b92915050565b600060208284031215610a3d57610a3c6109e7565b5b6000610a4b84828501610a12565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a8e578082015181840152602081019050610a73565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ab682610a54565b610ac08185610a5f565b9350610ad0818560208601610a70565b610ad981610a9a565b840191505092915050565b610aed816109f1565b82525050565b60008115159050919050565b610b0881610af3565b82525050565b60006080820190508181036000830152610b288187610aab565b90508181036020830152610b3c8186610aab565b9050610b4b6040830185610ae4565b610b586060830184610aff565b95945050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ba382610a9a565b810181811067ffffffffffffffff82111715610bc257610bc1610b6b565b5b80604052505050565b6000610bd56109dd565b9050610be18282610b9a565b919050565b600067ffffffffffffffff821115610c0157610c00610b6b565b5b610c0a82610a9a565b9050602081019050919050565b82818337600083830152505050565b6000610c39610c3484610be6565b610bcb565b905082815260208101848484011115610c5557610c54610b66565b5b610c60848285610c17565b509392505050565b600082601f830112610c7d57610c7c610b61565b5b8135610c8d848260208601610c26565b91505092915050565b60008060408385031215610cad57610cac6109e7565b5b600083013567ffffffffffffffff811115610ccb57610cca6109ec565b5b610cd785828601610c68565b925050602083013567ffffffffffffffff811115610cf857610cf76109ec565b5b610d0485828601610c68565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d3982610d0e565b9050919050565b610d4981610d2e565b8114610d5457600080fd5b50565b600081359050610d6681610d40565b92915050565b60008060408385031215610d8357610d826109e7565b5b6000610d9185828601610a12565b9250506020610da285828601610d57565b9150509250929050565b6000602082019050610dc16000830184610aff565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610e0f82610a54565b610e198185610df3565b9350610e29818560208601610a70565b610e3281610a9a565b840191505092915050565b6000610e498383610e04565b905092915050565b6000602082019050919050565b6000610e6982610dc7565b610e738185610dd2565b935083602082028501610e8585610de3565b8060005b85811015610ec15784840389528151610ea28582610e3d565b9450610ead83610e51565b925060208a01995050600181019050610e89565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610f08816109f1565b82525050565b6000610f1a8383610eff565b60208301905092915050565b6000602082019050919050565b6000610f3e82610ed3565b610f488185610ede565b9350610f5383610eef565b8060005b83811015610f84578151610f6b8882610f0e565b9750610f7683610f26565b925050600181019050610f57565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610fc681610af3565b82525050565b6000610fd88383610fbd565b60208301905092915050565b6000602082019050919050565b6000610ffc82610f91565b6110068185610f9c565b935061101183610fad565b8060005b838110156110425781516110298882610fcc565b975061103483610fe4565b925050600181019050611015565b5085935050505092915050565b600060808201905081810360008301526110698187610e5e565b9050818103602083015261107d8186610e5e565b905081810360408301526110918185610f33565b905081810360608301526110a58184610ff1565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110f757607f821691505b60208210810361110a576111096110b0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111727fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611135565b61117c8683611135565b95508019841693508086168417925050509392505050565b6000819050919050565b60006111b96111b46111af846109f1565b611194565b6109f1565b9050919050565b6000819050919050565b6111d38361119e565b6111e76111df826111c0565b848454611142565b825550505050565b600090565b6111fc6111ef565b6112078184846111ca565b505050565b5b8181101561122b576112206000826111f4565b60018101905061120d565b5050565b601f8211156112705761124181611110565b61124a84611125565b81016020851015611259578190505b61126d61126585611125565b83018261120c565b50505b505050565b600082821c905092915050565b600061129360001984600802611275565b1980831691505092915050565b60006112ac8383611282565b9150826002028217905092915050565b6112c582610a54565b67ffffffffffffffff8111156112de576112dd610b6b565b5b6112e882546110df565b6112f382828561122f565b600060209050601f8311600181146113265760008415611314578287015190505b61131e85826112a0565b865550611386565b601f19841661133486611110565b60005b8281101561135c57848901518255600182019150602085019450602081019050611337565b868310156113795784890151611375601f891682611282565b8355505b6001600288020188555050505b505050505050565b7f596f7527766520616c726561647920766f746564000000000000000000000000600082015250565b60006113c4601483610a5f565b91506113cf8261138e565b602082019050919050565b600060208201905081810360008301526113f3816113b7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f416c726561647920657865637574656400000000000000000000000000000000600082015250565b600061145f601083610a5f565b915061146a82611429565b602082019050919050565b6000602082019050818103600083015261148e81611452565b9050919050565b7f496e76616c69642070726f706f73616c00000000000000000000000000000000600082015250565b60006114cb601083610a5f565b91506114d682611495565b602082019050919050565b600060208201905081810360008301526114fa816114be565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061153b826109f1565b9150611546836109f1565b925082820190508082111561155e5761155d611501565b5b9291505056fea264697066735822122068abfca4dfc2d00641be384ca48fa7610883c6f8c1b52c7d276e16581da1278464736f6c634300081c0033";

type KryptoDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KryptoDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KryptoDAO__factory extends ContractFactory {
  constructor(...args: KryptoDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      KryptoDAO & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): KryptoDAO__factory {
    return super.connect(runner) as KryptoDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KryptoDAOInterface {
    return new Interface(_abi) as KryptoDAOInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): KryptoDAO {
    return new Contract(address, _abi, runner) as unknown as KryptoDAO;
  }
}
