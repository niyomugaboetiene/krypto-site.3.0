/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { KryptoDAO, KryptoDAOInterface } from "../../dao.sol/KryptoDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "CreateProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "GetProposal",
    outputs: [
      {
        internalType: "string[]",
        name: "name",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "description",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "voteCount",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "executed",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "VoteProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506112fa8061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063013cf08b146100515780630df07b811461008457806381cc0a38146100a057806389b14491146100bc575b600080fd5b61006b60048036038101906100669190610840565b6100dd565b60405161007b9493929190610927565b60405180910390f35b61009e60048036038101906100999190610aaf565b61023a565b005b6100ba60048036038101906100b59190610840565b6102e6565b005b6100c46104ba565b6040516100d49493929190610daf565b60405180910390f35b600081815481106100ed57600080fd5b906000526020600020906004020160009150905080600001805461011090610e3f565b80601f016020809104026020016040519081016040528092919081815260200182805461013c90610e3f565b80156101895780601f1061015e57610100808354040283529160200191610189565b820191906000526020600020905b81548152906001019060200180831161016c57829003601f168201915b50505050509080600101805461019e90610e3f565b80601f01602080910402602001604051908101604052809291908181526020018280546101ca90610e3f565b80156102175780601f106101ec57610100808354040283529160200191610217565b820191906000526020600020905b8154815290600101906020018083116101fa57829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b6000604051806080016040528083815260200184815260200160008152602001600015158152509080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001908161029f919061101c565b5060208201518160010190816102b5919061101c565b506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555050505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036a9061113a565b60405180910390fd5b600081815481106103875761038661115a565b5b906000526020600020906004020160030160009054906101000a900460ff16156103e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dd906111d5565b60405180910390fd5b806000805490501161042d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042490611241565b60405180910390fd5b6001600082815481106104435761044261115a565b5b90600052602060002090600402016002015461045f9190611290565b5060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6060806060806000808054905090508067ffffffffffffffff8111156104e3576104e2610984565b5b60405190808252806020026020018201604052801561051657816020015b60608152602001906001900390816105015790505b5094508067ffffffffffffffff81111561053357610532610984565b5b60405190808252806020026020018201604052801561056657816020015b60608152602001906001900390816105515790505b5093508067ffffffffffffffff81111561058357610582610984565b5b6040519080825280602002602001820160405280156105b15781602001602082028036833780820191505090505b5092508067ffffffffffffffff8111156105ce576105cd610984565b5b6040519080825280602002602001820160405280156105fc5781602001602082028036833780820191505090505b50915060005b818110156107ee57600080828154811061061f5761061e61115a565b5b9060005260206000209060040201905080600101805461063e90610e3f565b80601f016020809104026020016040519081016040528092919081815260200182805461066a90610e3f565b80156106b75780601f1061068c576101008083540402835291602001916106b7565b820191906000526020600020905b81548152906001019060200180831161069a57829003601f168201915b50505050508783815181106106cf576106ce61115a565b5b60200260200101819052508060000180546106e990610e3f565b80601f016020809104026020016040519081016040528092919081815260200182805461071590610e3f565b80156107625780601f1061073757610100808354040283529160200191610762565b820191906000526020600020905b81548152906001019060200180831161074557829003601f168201915b505050505086838151811061077a5761077961115a565b5b6020026020010181905250806002015485838151811061079d5761079c61115a565b5b6020026020010181815250508060030160009054906101000a900460ff168483815181106107ce576107cd61115a565b5b602002602001019015159081151581525050508080600101915050610602565b505090919293565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61081d8161080a565b811461082857600080fd5b50565b60008135905061083a81610814565b92915050565b60006020828403121561085657610855610800565b5b60006108648482850161082b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108a757808201518184015260208101905061088c565b60008484015250505050565b6000601f19601f8301169050919050565b60006108cf8261086d565b6108d98185610878565b93506108e9818560208601610889565b6108f2816108b3565b840191505092915050565b6109068161080a565b82525050565b60008115159050919050565b6109218161090c565b82525050565b6000608082019050818103600083015261094181876108c4565b9050818103602083015261095581866108c4565b905061096460408301856108fd565b6109716060830184610918565b95945050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109bc826108b3565b810181811067ffffffffffffffff821117156109db576109da610984565b5b80604052505050565b60006109ee6107f6565b90506109fa82826109b3565b919050565b600067ffffffffffffffff821115610a1a57610a19610984565b5b610a23826108b3565b9050602081019050919050565b82818337600083830152505050565b6000610a52610a4d846109ff565b6109e4565b905082815260208101848484011115610a6e57610a6d61097f565b5b610a79848285610a30565b509392505050565b600082601f830112610a9657610a9561097a565b5b8135610aa6848260208601610a3f565b91505092915050565b60008060408385031215610ac657610ac5610800565b5b600083013567ffffffffffffffff811115610ae457610ae3610805565b5b610af085828601610a81565b925050602083013567ffffffffffffffff811115610b1157610b10610805565b5b610b1d85828601610a81565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610b6f8261086d565b610b798185610b53565b9350610b89818560208601610889565b610b92816108b3565b840191505092915050565b6000610ba98383610b64565b905092915050565b6000602082019050919050565b6000610bc982610b27565b610bd38185610b32565b935083602082028501610be585610b43565b8060005b85811015610c215784840389528151610c028582610b9d565b9450610c0d83610bb1565b925060208a01995050600181019050610be9565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610c688161080a565b82525050565b6000610c7a8383610c5f565b60208301905092915050565b6000602082019050919050565b6000610c9e82610c33565b610ca88185610c3e565b9350610cb383610c4f565b8060005b83811015610ce4578151610ccb8882610c6e565b9750610cd683610c86565b925050600181019050610cb7565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610d268161090c565b82525050565b6000610d388383610d1d565b60208301905092915050565b6000602082019050919050565b6000610d5c82610cf1565b610d668185610cfc565b9350610d7183610d0d565b8060005b83811015610da2578151610d898882610d2c565b9750610d9483610d44565b925050600181019050610d75565b5085935050505092915050565b60006080820190508181036000830152610dc98187610bbe565b90508181036020830152610ddd8186610bbe565b90508181036040830152610df18185610c93565b90508181036060830152610e058184610d51565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e5757607f821691505b602082108103610e6a57610e69610e10565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610ed27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610e95565b610edc8683610e95565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610f19610f14610f0f8461080a565b610ef4565b61080a565b9050919050565b6000819050919050565b610f3383610efe565b610f47610f3f82610f20565b848454610ea2565b825550505050565b600090565b610f5c610f4f565b610f67818484610f2a565b505050565b5b81811015610f8b57610f80600082610f54565b600181019050610f6d565b5050565b601f821115610fd057610fa181610e70565b610faa84610e85565b81016020851015610fb9578190505b610fcd610fc585610e85565b830182610f6c565b50505b505050565b600082821c905092915050565b6000610ff360001984600802610fd5565b1980831691505092915050565b600061100c8383610fe2565b9150826002028217905092915050565b6110258261086d565b67ffffffffffffffff81111561103e5761103d610984565b5b6110488254610e3f565b611053828285610f8f565b600060209050601f8311600181146110865760008415611074578287015190505b61107e8582611000565b8655506110e6565b601f19841661109486610e70565b60005b828110156110bc57848901518255600182019150602085019450602081019050611097565b868310156110d957848901516110d5601f891682610fe2565b8355505b6001600288020188555050505b505050505050565b7f596f7527726520616c726561647920766f746564000000000000000000000000600082015250565b6000611124601483610878565b915061112f826110ee565b602082019050919050565b6000602082019050818103600083015261115381611117565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f416c726561647920657865637574656400000000000000000000000000000000600082015250565b60006111bf601083610878565b91506111ca82611189565b602082019050919050565b600060208201905081810360008301526111ee816111b2565b9050919050565b7f496e76616c69642070726f706f73616c00000000000000000000000000000000600082015250565b600061122b601083610878565b9150611236826111f5565b602082019050919050565b6000602082019050818103600083015261125a8161121e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061129b8261080a565b91506112a68361080a565b92508282019050808211156112be576112bd611261565b5b9291505056fea264697066735822122058a0fd0ae56d5fd36bf13d309d9fb00c00f86b7a54cb0a1cb4effa89f955fa2e64736f6c634300081c0033";

type KryptoDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KryptoDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KryptoDAO__factory extends ContractFactory {
  constructor(...args: KryptoDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      KryptoDAO & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): KryptoDAO__factory {
    return super.connect(runner) as KryptoDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KryptoDAOInterface {
    return new Interface(_abi) as KryptoDAOInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): KryptoDAO {
    return new Contract(address, _abi, runner) as unknown as KryptoDAO;
  }
}
