/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { KryptoDAO, KryptoDAOInterface } from "../../dao.sol/KryptoDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "CreateProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "GetProposal",
    outputs: [
      {
        internalType: "string[]",
        name: "name",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "description",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "voteCount",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "executed",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610f588061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063013cf08b146100465780630df07b811461007957806389b1449114610095575b600080fd5b610060600480360381019061005b9190610645565b6100b6565b604051610070949392919061072c565b60405180910390f35b610093600480360381019061008e91906108b4565b610213565b005b61009d6102bf565b6040516100ad9493929190610bb4565b60405180910390f35b600081815481106100c657600080fd5b90600052602060002090600402016000915090508060000180546100e990610c44565b80601f016020809104026020016040519081016040528092919081815260200182805461011590610c44565b80156101625780601f1061013757610100808354040283529160200191610162565b820191906000526020600020905b81548152906001019060200180831161014557829003601f168201915b50505050509080600101805461017790610c44565b80601f01602080910402602001604051908101604052809291908181526020018280546101a390610c44565b80156101f05780601f106101c5576101008083540402835291602001916101f0565b820191906000526020600020905b8154815290600101906020018083116101d357829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b600060405180608001604052808381526020018481526020016000815260200160001515815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000190816102789190610e21565b50602082015181600101908161028e9190610e21565b506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555050505050565b6060806060806000808054905090508067ffffffffffffffff8111156102e8576102e7610789565b5b60405190808252806020026020018201604052801561031b57816020015b60608152602001906001900390816103065790505b5094508067ffffffffffffffff81111561033857610337610789565b5b60405190808252806020026020018201604052801561036b57816020015b60608152602001906001900390816103565790505b5093508067ffffffffffffffff81111561038857610387610789565b5b6040519080825280602002602001820160405280156103b65781602001602082028036833780820191505090505b5092508067ffffffffffffffff8111156103d3576103d2610789565b5b6040519080825280602002602001820160405280156104015781602001602082028036833780820191505090505b50915060005b818110156105f357600080828154811061042457610423610ef3565b5b9060005260206000209060040201905080600101805461044390610c44565b80601f016020809104026020016040519081016040528092919081815260200182805461046f90610c44565b80156104bc5780601f10610491576101008083540402835291602001916104bc565b820191906000526020600020905b81548152906001019060200180831161049f57829003601f168201915b50505050508783815181106104d4576104d3610ef3565b5b60200260200101819052508060000180546104ee90610c44565b80601f016020809104026020016040519081016040528092919081815260200182805461051a90610c44565b80156105675780601f1061053c57610100808354040283529160200191610567565b820191906000526020600020905b81548152906001019060200180831161054a57829003601f168201915b505050505086838151811061057f5761057e610ef3565b5b602002602001018190525080600201548583815181106105a2576105a1610ef3565b5b6020026020010181815250508060030160009054906101000a900460ff168483815181106105d3576105d2610ef3565b5b602002602001019015159081151581525050508080600101915050610407565b505090919293565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6106228161060f565b811461062d57600080fd5b50565b60008135905061063f81610619565b92915050565b60006020828403121561065b5761065a610605565b5b600061066984828501610630565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106ac578082015181840152602081019050610691565b60008484015250505050565b6000601f19601f8301169050919050565b60006106d482610672565b6106de818561067d565b93506106ee81856020860161068e565b6106f7816106b8565b840191505092915050565b61070b8161060f565b82525050565b60008115159050919050565b61072681610711565b82525050565b6000608082019050818103600083015261074681876106c9565b9050818103602083015261075a81866106c9565b90506107696040830185610702565b610776606083018461071d565b95945050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107c1826106b8565b810181811067ffffffffffffffff821117156107e0576107df610789565b5b80604052505050565b60006107f36105fb565b90506107ff82826107b8565b919050565b600067ffffffffffffffff82111561081f5761081e610789565b5b610828826106b8565b9050602081019050919050565b82818337600083830152505050565b600061085761085284610804565b6107e9565b90508281526020810184848401111561087357610872610784565b5b61087e848285610835565b509392505050565b600082601f83011261089b5761089a61077f565b5b81356108ab848260208601610844565b91505092915050565b600080604083850312156108cb576108ca610605565b5b600083013567ffffffffffffffff8111156108e9576108e861060a565b5b6108f585828601610886565b925050602083013567ffffffffffffffff8111156109165761091561060a565b5b61092285828601610886565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061097482610672565b61097e8185610958565b935061098e81856020860161068e565b610997816106b8565b840191505092915050565b60006109ae8383610969565b905092915050565b6000602082019050919050565b60006109ce8261092c565b6109d88185610937565b9350836020820285016109ea85610948565b8060005b85811015610a265784840389528151610a0785826109a2565b9450610a12836109b6565b925060208a019950506001810190506109ee565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610a6d8161060f565b82525050565b6000610a7f8383610a64565b60208301905092915050565b6000602082019050919050565b6000610aa382610a38565b610aad8185610a43565b9350610ab883610a54565b8060005b83811015610ae9578151610ad08882610a73565b9750610adb83610a8b565b925050600181019050610abc565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610b2b81610711565b82525050565b6000610b3d8383610b22565b60208301905092915050565b6000602082019050919050565b6000610b6182610af6565b610b6b8185610b01565b9350610b7683610b12565b8060005b83811015610ba7578151610b8e8882610b31565b9750610b9983610b49565b925050600181019050610b7a565b5085935050505092915050565b60006080820190508181036000830152610bce81876109c3565b90508181036020830152610be281866109c3565b90508181036040830152610bf68185610a98565b90508181036060830152610c0a8184610b56565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c5c57607f821691505b602082108103610c6f57610c6e610c15565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610cd77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610c9a565b610ce18683610c9a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610d1e610d19610d148461060f565b610cf9565b61060f565b9050919050565b6000819050919050565b610d3883610d03565b610d4c610d4482610d25565b848454610ca7565b825550505050565b600090565b610d61610d54565b610d6c818484610d2f565b505050565b5b81811015610d9057610d85600082610d59565b600181019050610d72565b5050565b601f821115610dd557610da681610c75565b610daf84610c8a565b81016020851015610dbe578190505b610dd2610dca85610c8a565b830182610d71565b50505b505050565b600082821c905092915050565b6000610df860001984600802610dda565b1980831691505092915050565b6000610e118383610de7565b9150826002028217905092915050565b610e2a82610672565b67ffffffffffffffff811115610e4357610e42610789565b5b610e4d8254610c44565b610e58828285610d94565b600060209050601f831160018114610e8b5760008415610e79578287015190505b610e838582610e05565b865550610eeb565b601f198416610e9986610c75565b60005b82811015610ec157848901518255600182019150602085019450602081019050610e9c565b86831015610ede5784890151610eda601f891682610de7565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122049f16d328ec7de7265b81500cf4af16e94fc51e7c0d6c94cf2e9b46520ca750264736f6c634300081c0033";

type KryptoDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KryptoDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KryptoDAO__factory extends ContractFactory {
  constructor(...args: KryptoDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      KryptoDAO & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): KryptoDAO__factory {
    return super.connect(runner) as KryptoDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KryptoDAOInterface {
    return new Interface(_abi) as KryptoDAOInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): KryptoDAO {
    return new Contract(address, _abi, runner) as unknown as KryptoDAO;
  }
}
